package chap18_DataInputOutput.sec03;

public class Info {
/* 18.3 바이트 입력 스트림
 * InputStream은 바이트 입력 스트림의 최상위 클래스, 추상클래스
 * 
 * 주요 메소드
 * int read() : 1바이트를 읽은 후 읽은 바이트를 리턴
 * int read(byte[] b) : 읽은 바이트를 매개값으로 주어진 배열에 저장 후 읽은 바이트 수를 리턴
 * void close() : 입력 스트림을 닫고 사용 메모리 해제
 * 
 * int read() 와 int read(byte[] b) 차이
 * -int read() : 읽은 데이터를 리턴(1바이트 만큼)
 * -int read(byte[] b) : 읽은 바이트 수를 리턴. 실제 읽은 데이터는 바이트배열 안에 저장된다
 * 
 * 
 * 1) 1 바이트 읽기
 * int read()
 * 리턴된 4바이트 중 맨 끝 1바이트만 읽는다.
 * 입력 스트림에서 5개의 바이트가 들어왔을 때 다 읽으려면 read()를 5번 써야한다.
 * 더 이상 입력스트림으로부터 바이트를 읽을 수 없다면 -1을 리턴. ->while문을 이용해 읽을 수 있는 마지막 바이트까지 반복해서 한 바이트씩 읽을 수 있다.
 * InputStream is = ...;
 * while(treu) {
 *  int data = is.read(); //1바이트를 읽고 리턴
 *  if(data == -1) break; //-1을 리턴했을 경우 while문 종료
 * }
 * 
 * 
 * 2) 바이트 배열로 읽기
 * int read(byte[] b)
 * 데이터는 배열에 저장하는데 리턴은 읽은 바이트 수
 * 더이상 읽을 것이 없으면 -1 리턴
 * 만약 1,2,3,4,5 가 있을 때, 배열크기가 3이라면
 * 첫 read()에서 1,2,3, 호출 -> 두번째 read()에서 4,5,3 
 * (이전에 읽은 바이트3이 남아있음. 읽은 바이트 수를 보고 3이 새로 읽은 바이트인지 전에 읽은 바이트인지 구분) 
 * 
 * 
 *
 */
}
